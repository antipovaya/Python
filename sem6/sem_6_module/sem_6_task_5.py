"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –î–æ–±–∞–≤—å—Ç–µ –≤ –º–æ–¥—É–ª—å —Å –∑–∞–≥–∞–¥–∫–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç
—Å–ª–æ–≤–∞—Ä—å —Å–ø–∏—Å–∫–æ–≤.
üìå –ö–ª—é—á —Å–ª–æ–≤–∞—Ä—è - –∑–∞–≥–∞–¥–∫–∞, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ —Å –æ—Ç–≥–∞–¥–∫–∞–º–∏.
üìå –§—É–Ω–∫—Ü–∏—è –≤ —Ü–∏–∫–ª–µ –≤—ã–∑—ã–≤–∞–µ—Ç –∑–∞–≥–∞–¥—ã–≤–∞—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã
–ø–µ—Ä–µ–¥–∞—Ç—å –µ–π –≤—Å–µ —Å–≤–æ–∏ –∑–∞–≥–∞–¥–∫–∏.
"""

__all__ = ['riddles']

def guess_what(riddle: str, guesses: list, attempts: int = 3) -> int:
    print(f'–û—Ç–≥–∞–¥–∞–π—Ç–µ –∑–∞–≥–∞–¥–∫—É {riddle}. {'\n'}'
          f'–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫: {attempts}.')

    count = 1
    guess = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≥–∞–¥–∫—É: ').lower()

    while count < attempts:
        if guess in guesses:
            print(f'–£–≥–∞–¥–∞–ª–∏! –≠—Ç–æ {guess}.')
            return count
        print(f'–ù–µ–≤–µ—Ä–Ω–æ. –ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ {attempts - count}.')
        guess = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≥–∞–¥–∫—É: ').lower()
        count += 1
        if guess in guesses:
            print(f'–£–≥–∞–¥–∞–ª–∏! –≠—Ç–æ {guess}.')
            return count

    print(f'–ù–µ —É–≥–∞–¥–∞–ª–∏!')
    return 0


def riddles():
    riddles_dict = {
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥ –≤–∞–º–∏, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å?": ["–±—É–¥—É—â–µ–µ", "–≥—Ä—è–¥—É—â–µ–µ"],
        "–ß—Ç–æ –∏–º–µ–µ—Ç —à–µ—é, –Ω–æ –Ω–µ –∏–º–µ–µ—Ç –≥–æ–ª–æ–≤—ã?": ["–ë—É—Ç—ã–ª–∫–∞", "–±—É—Ç—ã–ª–∫–∞"],
        "–ß—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ú–æ—Å–∫–≤–µ, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –≤ –ü–∞—Ä–∏–∂–µ?": ["–ë—É–∫–≤–∞ \"–û\" (–≤ —Å–ª–æ–≤–µ –ú–æ—Å–∫–≤–∞)", "–û", "–æ"],
        "–ß—Ç–æ –∏–º–µ–µ—Ç –Ω–æ–≥–∏, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç —Ö–æ–¥–∏—Ç—å?": ["—Å—Ç–æ–ª", "—Å—Ç—É–ª"],
        "–ß—Ç–æ –º–æ–∂–µ—Ç –ª–µ—Ç–µ—Ç—å, –Ω–æ –Ω–µ –∏–º–µ–µ—Ç –∫—Ä—ã–ª—å–µ–≤?": ["–≤—Ä–µ–º—è"],
    }
    return [guess_what(k, v) for k, v in riddles_dict.items()]


if __name__ == '__main__':
    res = riddles()
    print(res)
